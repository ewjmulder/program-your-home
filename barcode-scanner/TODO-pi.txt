TODO Raspberry inrichting:
- Set right timezone
- Make it no-login, boot to command line
- Install:
  - Java 8
  - Git
  - Maven 3
- Get barcode-scanner code
- Play with / install libraries for GPIO -> Pi4J

# Image: latest rasbian (atm jessy) light image from the raspberry pi people themselves (foundation?)

# Na eerste boot: (voor resizen image naar volledige grootte SD kaart) (zou ook via ssh moeten kunnen)
sudo raspi-config
-> expand filesystem SD card!!
-> Autologis as pi user (man...) --> does not work! (use manual action)
-> set timezone
-> set network name

#Set timezone (already done in raspi-config)
sudo timedatectl set-timezone Europe/Amsterdam


#Autologin:
#sudo mkdir /etc/systemd/system/getty@tty1.service.d/
sudo nano /etc/systemd/system/getty@tty1.service.d/autologin.conf

[Service]
ExecStart=
ExecStart=-/sbin/agetty --autologin pi --noclear %I 38400 linux

sudo systemctl enable getty@tty1.service


#Install software (copied from provision.sh but adapted a lot)
sudo apt-get update

echo "Installing git"
sudo apt-get install --yes git

echo "Installing maven"
sudo apt-get install --yes maven

#echo "Installing Java 8" # Oracle edition (note: installing after maven, so it will upgrade to this Java version as well)
# Not needed? sudo apt-get install python-software-properties
#sudo apt-get install software-properties-common
#sudo add-apt-repository ppa:webupd8team/java
#sudo apt-get update
## Needs auto-answers to accept the licence.
#echo debconf shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections
#echo debconf shared/accepted-oracle-license-v1-1 seen true | sudo /usr/bin/debconf-set-selections
#sudo apt-get install --yes oracle-java8-installer

--> Above does not work on the pi (add-apt-repository does not exist)
--> Update: add-apt-repository can be installed, but ppa does not contain raspbian / jessy data!

# Does work without human 'intervention'
sudo apt-get install --yes oracle-java8-jdk

https://www.youtube.com/watch?v=irZR4nVhI_g (for enabling I2C)

# 1. Setup /etc/modules
sudo nano /etc/modules
# Add 2 lines:
i2c-bcm2708
i2c-dev

# 2. Install i2c-tools (is this really needed when working with Pi4J?)
sudo apt-get install --yes python-smbus
sudo apt-get install --yes i2c-tools


# 3. Remove i2c from blacklist
sudo nano /etc/modprobe.d/raspi-blacklist.conf
# Comment 2 lines:
blacklist spi-bcm2708
blacklist i2c-bcm2708

--> Update: in Jessy, so this in the raspi-config (prob. step 1 is not needed anymore as well then)


#TODO: git clone pyh (release branch) - use barcode scanner project

#For barcode scanner, following builds are needed for dependent jars in maven repo (better have own nexus at some point):
- Pyh parent (mvn clean install -N)
- Pyh commons
- Pyh api
- Shopping api
- Barcode scanner (first mvn clean install, then mvn exec:java will work)

#Add boot script to profile
/home/pi/.profile

# Custom PYH addition
if [ "$SSH_CONNECTION" != "" ]; then
  echo Logging in with ssh, so not executing start.sh
else
  echo Logging in with something that is not ssh, so executing start.sh
  cd /home/pi/program-your-home/barcode-scanner
  bash ./start.sh
fi
