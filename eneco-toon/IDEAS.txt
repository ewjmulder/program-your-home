Finally the Toon update has arrived and we can start to hack the hue support! First we need to find out what the Hue Bridge discovery
method is that Toon uses, so we can spoof being a Hue Bridge. See this page: http://www.developers.meethue.com/documentation/hue-bridge-discovery
for more info on the possible methods. Probably it will use at least UPnP, so the Java lib http://4thline.org/projects/cling/ is probably a nice one to start with.

Notes: Toon seems to cache the bridge IP, because after a succesful bridge discovery, it will claim that a bridge has been found,
even though there is no bridge on the network anymore and even thoughthe toon itself has no internet anymore!

Steps taken: factory reset to find out what happens the first time when toon tries to connect to the bridge
First all setup steps have to be 'walked though', takes quite some time...
Nefit Ecomline Classic 2003

Clone of Hue Bridge behaviour:
https://github.com/sagen/hue-upnp

Can't seem to snif the Toon UPnP search query / the Hue response and the hue broadcast.
Maybe snif on the bridge side?
Must be some communication between Toon and Hue, but what and how to pinpoint it in the best way?
After initial bridge discovery, the IP is very probably saved at the Toon side and cannot be redetermined
(although there might be some background (re)checking going on)

UPnP response(s) from Hue:

HTTP/1.1 200 OK
CACHE-CONTROL: max-age=100
EXT:
LOCATION: http://192.168.2.100:80/description.xml
SERVER: FreeRTOS/6.0.5, UPnP/1.0, IpBridge/0.1
ST: upnp:rootdevice
USN: uuid:2f402f80-da50-11e1-9b23-00178818572b::upnp:rootdevice

HTTP/1.1 200 OK
CACHE-CONTROL: max-age=100
EXT:
LOCATION: http://192.168.2.100:80/description.xml
SERVER: FreeRTOS/6.0.5, UPnP/1.0, IpBridge/0.1
ST: uuid:2f402f80-da50-11e1-9b23-00178818572b
USN: uuid:2f402f80-da50-11e1-9b23-00178818572b

HTTP/1.1 200 OK
CACHE-CONTROL: max-age=100
EXT:
LOCATION: http://192.168.2.100:80/description.xml
SERVER: FreeRTOS/6.0.5, UPnP/1.0, IpBridge/0.1
ST: urn:schemas-upnp-org:device:basic:1
USN: uuid:2f402f80-da50-11e1-9b23-00178818572b

IDEA: Trick Toon into thinking it gets data from the internet, while it's actually coming from me!
And with that trick, use the new Hue support to actually control the PYH server with that! (scenes -> activities...)

--> That works and you can see the network packets of the Toon device. Unfortunately it's all HTTPS to a single server: 95.142.102.183

IP Lookup Result for 95.142.102.183 - 

IP Address:
95.142.102.183 

Host of this IP:
a3985.homeautomationeurope.atom86.net 

Organization:
Schuberg Philis B.V.

--> Indeed Schuberg Philis does IT business for Eneco

So no possibility to soft-hack the Toon with that network traffic (like wheather, etc)
Or maybe it's possible to fake an SSL connection with 95.142.102.183, but that probably requires a real signed certificate and maybe it actually checks
the expected certificate on the Toon device, etc. So no use there to go into that much trouble for a almost certain death path.
Although this still leaves open the option of soft-hacking Hue support, since that works on a local connection and only HTTP



Steps to set up the shared network: (Wireless connection 3 should still be there to re-enable)
https://www.youtube.com/watch?v=zFHIvCMTqbQ
(commands should be run in an Administrator command prompt)

C:\Windows\system32>netsh wlan set hostednetwork mode=allow ssid=SparrenBrid key=12345678
The hosted network mode has been set to allow.
The SSID of the hosted network has been successfully changed.
The user key passphrase of the hosted network has been successfully changed.

C:\Windows\system32>netsh wlan start hostednetwork
The hosted network started.
